<!DOCTYPE html>
<html>
	<head>
		<title>XIMPEL</title>
		<link rel="stylesheet" href="ximpel/assets/ximpel.css" type="text/css" />
		<link	rel="stylesheet" href="vendor/clmtrackr-dev/examples/styles/emotion_detection.css" type="text/css" />

		<script>
      // getUserMedia only works over https in Chrome 47+, so we redirect to https. Also notify user if running from file.
      if (window.location.protocol == "file:") {
        alert("You seem to be running this example directly from a file. Note that these examples only work when served from a server or localhost due to canvas cross-domain restrictions.");
      } else if (window.location.hostname !== "localhost" && window.location.protocol !== "https:"){
        window.location.protocol = "https";
      }
    </script>

		<!-- should normally be jquery 1.11.3 -->
		<script type="text/javascript" src="vendor/jquery.1.11.0.min.js"></script>
		<script type="text/javascript" src="ximpel/polyfills.js"></script>
		<script type="text/javascript" src="ximpel/ximpel.js"></script>
		<script type="text/javascript" src="ximpel/views/View.js"></script>
		<script type="text/javascript" src="ximpel/Models.js"></script>
		<script type="text/javascript" src="ximpel/XimpelApp.js"></script>
		<script type="text/javascript" src="ximpel/Analytics.js"></script>
		<script type="text/javascript" src="ximpel/player/Player.js"></script>
		<script type="text/javascript" src="ximpel/Parser.js"></script>
		<script type="text/javascript" src="ximpel/player/MediaPlayer.js"></script>
		<script type="text/javascript" src="ximpel/QuestionManager.js"></script>
		<script type="text/javascript" src="ximpel/player/SequencePlayer.js"></script>
		<script type="text/javascript" src="ximpel/player/ParallelPlayer.js"></script>
		<script type="text/javascript" src="ximpel/media_types/MediaType.js"></script>
		<script type="text/javascript" src="ximpel/MediaTypeRegistration.js"></script>
		<script type="text/javascript" src="ximpel/PubSub.js"></script>

		<!-- VIEWS -->
		<script type="text/javascript" src="ximpel/views/XimpelAppView.js"></script>
		<script type="text/javascript" src="ximpel/views/OverlayView.js"></script>
		<script type="text/javascript" src="ximpel/views/QuestionView.js"></script>

		<!-- MEDIA TYPES -->
		<script type="text/javascript" src="ximpel/media_types/Video.js"></script>
		<script type="text/javascript" src="ximpel/media_types/Image.js"></script>
		<script type="text/javascript" src="ximpel/media_types/Audio.js"></script>
		<script type="text/javascript" src="ximpel/media_types/YouTube.js"></script>
		<script type="text/javascript" src="ximpel/media_types/Message.js"></script>
		<script type="text/javascript" src="ximpel/media_types/Iframe.js"></script>
		<script type="text/javascript" src="ximpel/media_types/Terminal.js"></script> <!-- Only enable this if you use it. Otherwise it throws socket-io errors. -->
		<script type="text/javascript" src="ximpel/media_types/Filler.js"></script>
		<script type="text/javascript" src="ximpel/media_types/TextBlock.js"></script>

		<!-- Emotion Tracking -->
		<script src="vendor/clmtrackr-dev/examples/js/libs/utils.js"></script> <!-- Helper functions -->
    <script src="vendor/clmtrackr-dev/build/clmtrackr.js"></script>
    <script src="vendor/clmtrackr-dev/models/model_pca_20_svm.js"></script>
    <script src="vendor/clmtrackr-dev/examples/js/libs/Stats.js"></script>
    <script src="vendor/clmtrackr-dev/examples/js/libs/d3.min.js"></script>
    <script src="vendor/clmtrackr-dev/examples/js/emotion_classifier.js"></script> <!-- new emotionClassifier -->
    <script src="vendor/clmtrackr-dev/examples/js/emotionmodel.js"></script> <!-- var pModel -->

		<script type="text/javascript">
			$( document ).ready(function(){

				// Define a XimpelApp object by passing the following arguments:
				// - The appId which is just a unique name for this presentation.
				// - The path to the playlist file relative to this html document.
				// - The path to the config file relative to this html document
				// - An object containing multiple optional settings such a the
				//   the width/height of the app and the element to use.
				var myApp = new ximpel.XimpelApp(
					'stefansapp',
					// 'fsm.xml',
					// 'pushdown_automata.xml',
					// 'turing_machine.xml',
					'calculator_interactive.xml',
					'config.xml', 
					{'appElement': 'ximpel1',
					 /*'parentElement': $( document.body ),*/
					 'appWidth': '640px',
					 'appHeight': '360px'
					}
				);

				// After creating a XimpelApp object tell the object to load the given playlist and config file.
				myApp.load( {
					'autoPlay': true
				}).done( function(){
					// This function is executed once the ximpel app has finished loading the playlist 
					// and config file and has been fully initialized (ie its ready to play or it is 
					// already playing if autoplay was set to true). This function can be used to interact
					// with the ximpel app using external javascript.
					var player = myApp.ximpelPlayer;
					//player.play();
					// do something...
					// player.startEmotionDetection();

					// Init score display
					var showScore = player.getConfigProperty('showScore');
					
					$('.scoreContainer').show();
					// Add more score initializations here
				
					player.addEventHandler( 'variable_updated', function( variableId ){
						console.log('variable updated', variableId);
						var value = player.getVariable( variableId );
						var binaryValue = (value >>> 0).toString(2);
						$('#' + variableId).text( value );
						$('.' + variableId + '_binary').text( binaryValue );
						if(variableId === "stack1"){
							$("#head").text( new Array(binaryValue.length + 1).join( " " ) + "^" );
						}
					});
				}.bind(this));

				var symbols = [];

				//FSM symbols display
				$('.ximpelPlayer').on('click', function(e){
					var span = e.target.tagName === "SPAN"? e.target : null;
					if(!span) return;
					var parent = $(span).parent()[0];
					for(var i = 0; i < parent.classList.length; i++){
						if(parent.classList[i] === "overlay"){
							symbols.push(parent.innerText);
							$('#symbols').text(symbols);
						}
					}
				})
			});


			
		</script>
	</head>

	<body>
		<div id="ximpel1">
			<style>
				.score {
					font-family: 'Consolas', 'Courier New', Courier, monospace;
				}
			</style>
			<div class="scoreContainer" style="left: 0px !important;">
				<!-- <div class="score">stack1: <span id="stack1"></span></div>
				<div class="score">stack1 binary: <span class="stack1_binary"></span></div>
				<div class="score">stack2: <span id="stack2"></span></div>
				<div class="score">stack2 binary: <span class="stack2_binary"></span></div>
				<div class="score"><span class="stack1_binary"></span><bdo dir="rtl" class="stack2_binary"></bdo></div>
				<pre class="score" style="display: inline;" id="head">LR</pre>
				<div class="score">Symbols: <span id="symbols"></span></div> -->
				<div class="score">Left: <span id="left"></span></div>
				<div class="score">Left Shadow: <span id="left_shadow"></span></div>
				<div class="score">Right: <span id="right"></span></div>
				<div class="score">Right Shadow: <span id="right_shadow"></span></div>
				<div class="score">Answer: <span id="answer"></span></div>
				<!-- Add more score containers here -->
			</div>
		</div>

		<!-- <div id="emotion_content">
      <h2>Emotion detection</h2>
      <div id="container">
        <video id="videoel" width="400" height="300" preload="auto" loop playsinline autoplay>
        </video>
        <canvas id="overlay" width="400" height="300"></canvas>
      </div>
      <div id="emotion_container">
        <div id="emotion_icons">
          <img class="emotion_icon" id="icon1" src="vendor/clmtrackr-dev/examples/media/icon_angry.png">
          <img class="emotion_icon" id="icon2" src="vendor/clmtrackr-dev/examples/media/icon_sad.png">
          <img class="emotion_icon" id="icon3" src="vendor/clmtrackr-dev/examples/media/icon_surprised.png">
          <img class="emotion_icon" id="icon4" src="vendor/clmtrackr-dev/examples/media/icon_happy.png">
        </div>
        <div id='emotion_chart'></div>
      </div>
      <div id="controls">
				<input class="btn" type="button" value="wait, loading video" disabled="disabled" onclick="startVideo()" id="startbutton"></input>
			</div>
		</div> -->
	</body> 
</html>